/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.baidu.struts.action;

import java.io.IOException;
import java.io.PrintWriter;
import java.sql.Timestamp;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.baidu.biz.SaleChanceBiz;
import com.baidu.biz.SysUserBiz;
import com.baidu.biz.IMPL.SaleChanceBizIMPL;
import com.baidu.struts.entity.CstCustomer;
import com.baidu.struts.entity.SalChance;
import com.baidu.struts.entity.SysUser;
import com.baidu.struts.form.SaleChanceForm;

/** 
 * MyEclipse Struts
 * Creation date: 12-22-2016
 * 
 * XDoclet definition:
 * @struts.action path="/saleChance" name="saleChanceForm" parameter="type" scope="request" validate="true"
 */
public class SaleChanceAction extends DispatchAction {
	/*
	 * Generated Methods
	 */
   private SaleChanceBiz saleChanceBiz;
   private SysUserBiz sysuser;
	public SysUserBiz getSysuser() {
	return sysuser;
}
public void setSysuser(SysUserBiz sysuser) {
	this.sysuser = sysuser;
}
	public void setSaleChanceBiz(SaleChanceBiz saleChanceBiz) {
	this.saleChanceBiz = saleChanceBiz;
}
	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 *///查询
	public ActionForward query(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		SaleChanceForm saleChanceForm = (SaleChanceForm) form;
		saleChanceForm.setChcStatus(1);
		int pageSize=2;
		
		int curpage=1;
		if(request.getParameter("curpage")!=null){
			curpage=Integer.parseInt(request.getParameter("curpage"));
		}
		if(curpage<1){
			curpage=1;
		}
		int maxpage=saleChanceBiz.MaxPage(pageSize, saleChanceForm);
		if(curpage>maxpage&& maxpage!=0){
			curpage=maxpage;
		}
	    int page=saleChanceBiz.getpage(saleChanceForm);
		List<SalChance>salist=saleChanceBiz.querySalchance(pageSize,curpage,saleChanceForm);
		if(salist!=null){
		   request.getSession().setAttribute("salist", salist);
		   request.getSession().setAttribute("maxpage", maxpage);
	       request.getSession().setAttribute("curpage", curpage);
	       request.getSession().setAttribute("page", page);
	      return new ActionForward("/Sale/SaleChance.jsp", true);
		}
		return new ActionForward("/Sale/SaleChance.jsp", true);
	}//添加
	public ActionForward AddSale(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws IOException {
		//Timestamp datime=(Timestamp) request.getSession().getAttribute("datetime");
	     PrintWriter out=response.getWriter();
		SaleChanceForm saleChanceForm = (SaleChanceForm) form;
		SalChance salchance=new SalChance();
		int usrId=(Integer)request.getSession().getAttribute("usrId");
		String name=(String)request.getSession().getAttribute("usrName");
		SimpleDateFormat sdf=new SimpleDateFormat("yyyy-MM-dd");
		String  date=  (String) request.getSession().getAttribute("datetime");
	
		salchance.setChcStatus(1);
		salchance.setChcCustName(saleChanceForm.getChcCustName());
		salchance.setChcSource(saleChanceForm.getChcSource());
		salchance.setChcRate(saleChanceForm.getChcRate());
		salchance.setChcLinkman(saleChanceForm.getChcLinkman());
		salchance.setChcTel(saleChanceForm.getChcTel());
		salchance.setChcTitle(saleChanceForm.getChcTitle());
		salchance.setChcDesc(saleChanceForm.getChcDesc());
		salchance.setChcCreateBy(name);
		salchance.setChcCreateId(usrId);
		try {
			salchance.setChcCreateDate(sdf.parse(date));
		} catch (ParseException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		saleChanceBiz.AddSaleChance(salchance);
	    out.print("保存成功");
	    out.close();
		return new ActionForward("/saleChance.do?type=query", true); 
	}//删除
	public ActionForward dateSale(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws IOException {
	PrintWriter out=response.getWriter();
     int id=Integer.parseInt(request.getParameter("id"));
	 int e=saleChanceBiz.dateSaleCHance(id);
	 out.print("删除成功");
		if(e>0){
			
			return new ActionForward("/saleChance.do?type=query", true);
		}
		out.print("删除失败 ID数为0");
		return new ActionForward("Sale/SaleChance.jsp", true);
	}//查询单数
	public ActionForward QuerSale(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		int chcId=Integer.parseInt(request.getParameter("chcId"));
		SalChance salChance=saleChanceBiz.hiSal(chcId);
		if(salChance!=null){
			request.getSession().setAttribute("chcId", chcId);
			request.getSession().setAttribute("salChance", salChance);
			return new ActionForward("Sale/EditSale.jsp", true);
		}
		return null;
	}//修改
	public ActionForward UpdaSale(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		PrintWriter out=response.getWriter();
		int chid=(Integer) request.getSession().getAttribute("chcId");
		int usrId=(Integer)request.getSession().getAttribute("usrId");
		String name=(String)request.getSession().getAttribute("usrName");
		SimpleDateFormat sdf=new SimpleDateFormat("yyyy-MM-dd");
		String dae=request.getParameter("chcCreateDate");
		SaleChanceForm saleChanceForm = (SaleChanceForm) form;
		SalChance salChance=new SalChance();
		salChance.setChcId(chid);
		salChance.setChcStatus(1);
		salChance.setChcCustName(saleChanceForm.getChcCustName());
		salChance.setChcSource(saleChanceForm.getChcSource());
		salChance.setChcRate(saleChanceForm.getChcRate());
		salChance.setChcLinkman(saleChanceForm.getChcLinkman());
		salChance.setChcTel(saleChanceForm.getChcTel());
		salChance.setChcTitle(saleChanceForm.getChcTitle());
		salChance.setChcDesc(saleChanceForm.getChcDesc());
		salChance.setChcCreateBy(name);
		salChance.setChcCreateId(usrId);
		salChance.setChcCreateDate(sdf.parse(dae));
		int cc=saleChanceBiz.updateSale(salChance);
		out.print("修改成功");
		if(cc>0){
			return new ActionForward("/saleChance.do?type=query", true);
		}
		  return null;
	}//分配
	public ActionForward SaleFp(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		    PrintWriter out=response.getWriter();
		    SalChance sa=new SalChance();
		    SalChance sal=(SalChance) request.getSession().getAttribute("sal");
		    int useId=Integer.parseInt(request.getParameter("useId"));
		    String name=(String)request.getSession().getAttribute("usrName");
		    SysUser sy=sysuser.getid(useId);
		    SimpleDateFormat sdf=new SimpleDateFormat("yyyy-MM-dd");
		    String  date=  (String) request.getSession().getAttribute("datetime");
		    sa.setChcStatus(2);
		    sa.setChcId(sal.getChcId());
			sa.setChcCustName(sal.getChcCustName());
			sa.setChcSource(sal.getChcSource());
			sa.setChcRate(sal.getChcRate());
			sa.setChcLinkman(sal.getChcLinkman());
			sa.setChcTel(sal.getChcTel());
			sa.setChcTitle(sal.getChcTitle());
			sa.setChcDesc(sal.getChcDesc());
			sa.setChcCreateBy(name);
			
			sa.setChcDueId(sy.getUsrId());
			sa.setChcDueTo(sy.getUsrName());
			sa.setChcDueDate(sdf.parse(date));
			
			sa.setChcCreateId(sal.getChcCreateId());
			sa.setChcCreateDate(sdf.parse(date));
			int cc=saleChanceBiz.updateSaleHan(sa);
			out.print("分配成功");
			if(cc>0){
				return new ActionForward("/saleChance.do?type=query", true);
			}
		return null;
	}//分配查询
	public ActionForward Usale(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
	    int chcId=Integer.parseInt(request.getParameter("chcId"));
	    SalChance sal=saleChanceBiz.hiSal(chcId);
	  List<SysUser>syslist=sysuser.listsys();
	  request.getSession().setAttribute("syslist", syslist);
	  request.getSession().setAttribute("sal", sal);
	  return new ActionForward("Sale/AllotSale.jsp", true);
	}//开发成功
	public ActionForward CG(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws ParseException {
		int chcId=Integer.parseInt(request.getParameter("chcId"));
		SimpleDateFormat sdf=new SimpleDateFormat("yyyyMMdd");
		
		SalChance salChance=saleChanceBiz.hiSal(chcId);

		String date=sdf.format(new Date());
		
		salChance.setChcCreateDate(sdf.parse(date));
		salChance.setChcStatus(3);
		saleChanceBiz.updateSal(salChance);
		CstCustomer cu=new CstCustomer();
		int max=saleChanceBiz.getMax();
		String sa="KH"+date+(max+1);
		cu.setCustNo(sa);
		cu.setCustName(salChance.getChcCustName());
		cu.setCustManagerId(salChance.getChcDueId());
		cu.setCustManagerName(salChance.getChcDueTo());
		cu.setCustTel(salChance.getChcTel());
		cu.setCustStatus(1);
		saleChanceBiz.AddCu(cu);
		return new ActionForward("/salPlan.do?type=query", true);
	}
	public ActionForward ZZ(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws ParseException {
	    int chcId=Integer.parseInt(request.getParameter("chcId"));
	    SalChance sal=saleChanceBiz.hiSal(chcId);
	    sal.setChcStatus(4);
	    saleChanceBiz.updateSal(sal);
	   return new ActionForward("/salPlan.do?type=query", true);
	}
}