/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.baidu.struts.action;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.baidu.biz.BasdictBiz;
import com.baidu.struts.entity.BasDict;
import com.baidu.struts.form.BasdictForm;

/** 
 * MyEclipse Struts
 * Creation date: 12-22-2016
 * 
 * XDoclet definition:
 * @struts.action parameter="flag" scope="request" validate="true"
 */
public class BasdictAction extends DispatchAction {
	
	private BasdictBiz basdictBiz;
	public void setBasdictBiz(BasdictBiz basdictBiz) {
		this.basdictBiz = basdictBiz;
	}

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	/*
	 * 查询
	 */
	public ActionForward findAllBasDicts(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		//创建对象
		BasdictForm basdictForm=(BasdictForm)form;
		List<BasDict> listbasdict=basdictBiz.findAllBasDicts(basdictForm);
		request.getSession().setAttribute("listbasdict", listbasdict);
		return new ActionForward("/Manager/DirectionData.jsp",true);
	}
	
	/*
	 * 添加字典
	 */
	public ActionForward Add(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		BasdictForm basdictForm=(BasdictForm)form;
		//创建实体对象
		BasDict basDict=new BasDict();
		basDict.setDictType(basdictForm.getDictType());//类别
		basDict.setDictItem(basdictForm.getDictItem());//条目
		//int dictIsEditable=Integer.parseInt(request.getParameter("dictIsEditable"));
		if (request.getParameterValues("dictValue")!=null) {
			basDict.setDictIsEditable(1);
		}else {
			basDict.setDictIsEditable(0);
		}
		basDict.setDictValue(basdictForm.getDictValue());//值
		int num=basdictBiz.addbasDict(basDict);
		if (num>0) {
			//添加成功
			return new ActionForward("/basdict.do?flag=findAllBasDicts",true);
		}else {
			//添加失败
			return new ActionForward("/Manager/DataAdd.jsp",true);
		}
	}
	
	
	/*
	 * 根据编号查询数据字典
	 */
	public ActionForward toEdit(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		//获取编号
		int id=Integer.parseInt(request.getParameter("id"));
		//List<BasDict> listbBasDicts=basdictBiz.findAllBasDicts();
		BasDict basDict=basdictBiz.findByID(id);
		request.getSession().setAttribute("basDict", basDict);
		//request.getSession().setAttribute("listbBasDicts", listbBasDicts);
		return new ActionForward("/Manager/DataEdit.jsp",true);
	}
	
	
	/*
	 * 修改数据字典
	 */
	public ActionForward Updatebasdict(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		//创建form表单
		BasdictForm basdictForm=(BasdictForm)form;
		//获取编号
		int dictId=Integer.parseInt(request.getParameter("dictId"));
		//创建实体对象
		BasDict basDict=new BasDict();
		//赋值
		basDict.setDictId(dictId);
		basDict.setDictIsEditable(basdictForm.getDictIsEditable());
		basDict.setDictItem(basdictForm.getDictItem());
		basDict.setDictType(basdictForm.getDictType());
		basDict.setDictValue(basdictForm.getDictValue());
		int num=basdictBiz.updatebasdict(basDict);
		if (num>0) {
			return new ActionForward("/basdict.do?flag=findAllBasDicts",true);
		}else {
			return new ActionForward("/Manager/DataEdit.jsp",true);
		}	
	}
	
	
	/*
	 * 删除数据字典
	 */
	public ActionForward Deletebasdict(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		//获取编号
		int dict_id=Integer.parseInt(request.getParameter("id"));
		int num=basdictBiz.deletebasdict(dict_id);
		if (num>0) { 
			//删除成功
			return new ActionForward("/basdict.do?flag=findAllBasDicts",true);
		}else {
			return new ActionForward("/Manager/DirectionData.jsp",true);
		}	
	}
}